<!-- Reservation List Page -->

@model List<Theam.Models.ReservationModel>
@{
    ViewData["Title"] = "Reservation Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- Success and Error Messages -->
@if (ViewBag.SuccessMessage != null)
{
    <div class="alert alert-success" role="alert">
        @ViewBag.SuccessMessage
    </div>
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="card">
        <div class="card-datatable table-responsive">
            <table class="table table-striped table-bordered text-center">
                <thead class="table-dark">
                <tr>
                    <th>Reservation ID</th>
                    <th>User Name</th>
                    <th>Date & Time</th>
                    <th>Table Code</th>
                    <th>Person Count</th>
                    <th>Reservation Status</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var reservation in Model)
                    {
                        <tr>
                            <td>@reservation.ReservationID</td>
                            <td>@reservation.UserName</td>
                            <td>@reservation.BookDate @reservation.BookTime</td>
                            <td>@(!string.IsNullOrEmpty(reservation.TableCode) ? reservation.TableCode : "Not Assigned")</td>
                            <td>@reservation.PersonCount</td>
                            <td>
                                <span class="badge @(reservation.ReservationStatus == "Cancelled" ? "bg-danger" : (reservation.ReservationStatus == "Confirmed" ? "bg-success" : "bg-warning"))">
                                    @reservation.ReservationStatus
                                </span>
                            </td>
                            <td class="d-flex justify-content-center">
                                <!-- Edit Button -->
                                <button class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" data-bs-target="#editModal" data-id="@reservation.ReservationID" data-userid="@reservation.UserID">
                                    Edit
                                </button>

                                <!-- Delete Button -->
                                <form method="post" action="@Url.Action("Delete", "Reservation", new { id = reservation.ReservationID })" style="display:inline;">
                                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this reservation?')">Delete</button>
                                </form>
                            </td>

                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7">No reservations found. @ViewBag.Error</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal for Editing Reservation -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form asp-action="Edit" method="post">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Reservation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Hidden Fields for ReservationID and UserID -->
                    <input type="hidden" id="ReservationID" name="ReservationID" />
                    <input type="hidden" id="UserID" name="UserID" />

                    <!-- Table Selection Dropdown -->
                    <div class="mb-3">
                        <label for="TableID" class="form-label">Table</label>
                        <select class="form-select" id="TableID" name="TableID">
                            <option value="">None</option> <!-- This will allow null -->
                            @foreach (var table in ViewBag.Tables)
                            {
                                <option value="@table.TableID">@table.TableCode</option>
                            }
                        </select>
                    </div>


                    <!-- Reservation Status Selection -->
                    <div class="mb-3">
                        <label for="ReservationStatus" class="form-label">Reservation Status</label>
                        <select class="form-select" id="ReservationStatus" name="ReservationStatus">
                            <option value="Confirmed">Confirmed</option>
                            <option value="Pending">Pending</option>
                            <option value="Cancelled">Cancelled</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var editButtons = document.querySelectorAll('[data-bs-target="#editModal"]');

            editButtons.forEach(button => {
                button.addEventListener('click', function () {
                    var row = button.closest('tr');
                    var reservationID = button.getAttribute('data-id');
                    var userID = button.getAttribute('data-userid');

                    var tableCode = row.cells[3].innerText.trim();
                    var reservationStatus = row.cells[5].innerText.trim();

                    document.querySelector('#ReservationID').value = reservationID;
                    document.querySelector('#UserID').value = userID;

                    var tableDropdown = document.querySelector('#TableID');
                    var found = false;
                    for (let option of tableDropdown.options) {
                        if (option.textContent.trim() === tableCode) {
                            option.selected = true;
                            found = true;
                            break;
                        }
                    }

                    // If no matching table is found or table is "Not Assigned", select "None"
                    if (!found || tableCode === "Not Assigned") {
                        tableDropdown.value = "null";
                    }

                    var statusDropdown = document.querySelector('#ReservationStatus');
                    for (let option of statusDropdown.options) {
                        if (option.value.toLowerCase() === reservationStatus.toLowerCase()) {
                            option.selected = true;
                            break;
                        }
                    }
                });
            });

            // Ensure "None" option sends NULL value when submitting
            document.querySelector('form').addEventListener('submit', function () {
                var tableDropdown = document.querySelector('#TableID');
                if (tableDropdown.value === "null") {
                    tableDropdown.value = ""; // Ensure it gets sent as NULL
                }
            });

        });

    </script>

}
